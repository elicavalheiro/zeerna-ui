/// <reference types="react" />
import type * as Stitches from '@stitches/react';
export declare const styled: <Type extends import("@stitches/react/types/util").Function | keyof JSX.IntrinsicElements | import("react").ComponentType<any>, Composers extends (string | import("@stitches/react/types/util").Function | import("react").ComponentType<any> | {
    [name: string]: unknown;
})[], CSS_1 = import("@stitches/react/types/css-util").CSS<{
    sm: "(min-width: 640px)";
    md: "(min-width: 768px)";
    lg: "(min-width: 1024px)";
}, {
    colors: {
        accent1: string;
        accent2: string;
        accent3: string;
        accent4: string;
        accent5: string;
        accent6: string;
        accent7: string;
        accent8: string;
        accent9: string;
        accent10: string;
        accent11: string;
        accent12: string;
        white: string;
        red1: string;
        red2: string;
        red3: string;
        red4: string;
        red5: string;
        red6: string;
        red7: string;
        red8: string;
        red9: string;
        red10: string;
        red11: string;
        red12: string;
        blackA1: string;
        blackA2: string;
        blackA3: string;
        blackA4: string;
        blackA5: string;
        blackA6: string;
        blackA7: string;
        blackA8: string;
        blackA9: string;
        blackA10: string;
        blackA11: string;
        blackA12: string;
        green1: string;
        green2: string;
        green3: string;
        green4: string;
        green5: string;
        green6: string;
        green7: string;
        green8: string;
        green9: string;
        green10: string;
        green11: string;
        green12: string;
        pink1: string;
        pink2: string;
        pink3: string;
        pink4: string;
        pink5: string;
        pink6: string;
        pink7: string;
        pink8: string;
        pink9: string;
        pink10: string;
        pink11: string;
        pink12: string;
        blue1: string;
        blue2: string;
        blue3: string;
        blue4: string;
        blue5: string;
        blue6: string;
        blue7: string;
        blue8: string;
        blue9: string;
        blue10: string;
        blue11: string;
        blue12: string;
        mauve1: string;
        mauve2: string;
        mauve3: string;
        mauve4: string;
        mauve5: string;
        mauve6: string;
        mauve7: string;
        mauve8: string;
        mauve9: string;
        mauve10: string;
        mauve11: string;
        mauve12: string;
        yellow1: string;
        yellow2: string;
        yellow3: string;
        yellow4: string;
        yellow5: string;
        yellow6: string;
        yellow7: string;
        yellow8: string;
        yellow9: string;
        yellow10: string;
        yellow11: string;
        yellow12: string;
        purple1: string;
        purple2: string;
        purple3: string;
        purple4: string;
        purple5: string;
        purple6: string;
        purple7: string;
        purple8: string;
        purple9: string;
        purple10: string;
        purple11: string;
        purple12: string;
    };
    fonts: {
        poppins: string;
    };
    space: {
        none: string;
        small1: string;
        small2: string;
        small3: string;
        medium1: string;
        medium2: string;
        medium3: string;
        large1: string;
        large2: string;
        large3: string;
    };
    sizes: {
        none: string;
        small1: string;
        small2: string;
        small3: string;
        medium1: string;
        medium2: string;
        medium3: string;
        large1: string;
        large2: string;
        large3: string;
    };
    fontSizes: {
        xsmall: string;
        small: string;
        medium: string;
        large: string;
    };
    fontWeights: {
        regular: string;
        semiBold: string;
        bold: string;
    };
    radii: {
        none: string;
        small: string;
        medium: string;
        large: string;
        circle: string;
    };
    shadows: {
        card: string;
    };
    zIndices: {
        1: string;
        2: string;
        3: string;
        4: string;
        max: string;
    };
    transitions: unknown;
    lineHeights: unknown;
    letterSpacings: unknown;
    borderWidths: unknown;
    borderStyles: unknown;
}, import("@stitches/react/types/config").DefaultThemeMap, {
    m: (value: string | number) => {
        margin: string | number;
    };
    mt: (value: string | number) => {
        margintTop: string | number;
    };
    mb: (value: string | number) => {
        margintBottom: string | number;
    };
    ml: (value: string | number) => {
        margintLeft: string | number;
    };
    mr: (value: string | number) => {
        marginRight: string | number;
    };
    mx: (value: string | number) => {
        marginLeft: string | number;
        marginRight: string | number;
    };
    my: (value: string | number) => {
        marginTop: string | number;
        marginBottom: string | number;
    };
    br: (value: string | number) => {
        borderRadius: string | number;
    };
    size: (value: string | number) => {
        width: string | number;
        height: string | number;
    };
    linearGradient: (value: string) => {
        backgroundImage: string;
    };
}>>(type: Type, ...composers: { [K in keyof Composers]: Composers[K] extends string | import("@stitches/react/types/util").Function | import("react").ComponentType<any> ? Composers[K] : import("@stitches/react/types/stitches").RemoveIndex<CSS_1> & {
    variants?: {
        [x: string]: {
            [x: string]: CSS_1;
            [x: number]: CSS_1;
        };
    } | undefined;
    compoundVariants?: (("variants" extends keyof Composers[K] ? { [Name in keyof Composers[K][keyof Composers[K] & "variants"]]?: import("@stitches/react/types/util").String | import("@stitches/react/types/util").Widen<keyof Composers[K][keyof Composers[K] & "variants"][Name]> | undefined; } : import("@stitches/react/types/util").WideObject) & {
        css: CSS_1;
    })[] | undefined;
    defaultVariants?: ("variants" extends keyof Composers[K] ? { [Name_1 in keyof Composers[K][keyof Composers[K] & "variants"]]?: import("@stitches/react/types/util").String | import("@stitches/react/types/util").Widen<keyof Composers[K][keyof Composers[K] & "variants"][Name_1]> | undefined; } : import("@stitches/react/types/util").WideObject) | undefined;
} & CSS_1 & { [K2 in keyof Composers[K]]: K2 extends "compoundVariants" | "defaultVariants" | "variants" ? unknown : K2 extends keyof CSS_1 ? CSS_1[K2] : unknown; }; }) => import("@stitches/react/types/styled-component").StyledComponent<Type, import("@stitches/react/types/styled-component").StyledComponentProps<Composers>, {
    sm: "(min-width: 640px)";
    md: "(min-width: 768px)";
    lg: "(min-width: 1024px)";
}, import("@stitches/react/types/css-util").CSS<{
    sm: "(min-width: 640px)";
    md: "(min-width: 768px)";
    lg: "(min-width: 1024px)";
}, {
    colors: {
        accent1: string;
        accent2: string;
        accent3: string;
        accent4: string;
        accent5: string;
        accent6: string;
        accent7: string;
        accent8: string;
        accent9: string;
        accent10: string;
        accent11: string;
        accent12: string;
        white: string;
        red1: string;
        red2: string;
        red3: string;
        red4: string;
        red5: string;
        red6: string;
        red7: string;
        red8: string;
        red9: string;
        red10: string;
        red11: string;
        red12: string;
        blackA1: string;
        blackA2: string;
        blackA3: string;
        blackA4: string;
        blackA5: string;
        blackA6: string;
        blackA7: string;
        blackA8: string;
        blackA9: string;
        blackA10: string;
        blackA11: string;
        blackA12: string;
        green1: string;
        green2: string;
        green3: string;
        green4: string;
        green5: string;
        green6: string;
        green7: string;
        green8: string;
        green9: string;
        green10: string;
        green11: string;
        green12: string;
        pink1: string;
        pink2: string;
        pink3: string;
        pink4: string;
        pink5: string;
        pink6: string;
        pink7: string;
        pink8: string;
        pink9: string;
        pink10: string;
        pink11: string;
        pink12: string;
        blue1: string;
        blue2: string;
        blue3: string;
        blue4: string;
        blue5: string;
        blue6: string;
        blue7: string;
        blue8: string;
        blue9: string;
        blue10: string;
        blue11: string;
        blue12: string;
        mauve1: string;
        mauve2: string;
        mauve3: string;
        mauve4: string;
        mauve5: string;
        mauve6: string;
        mauve7: string;
        mauve8: string;
        mauve9: string;
        mauve10: string;
        mauve11: string;
        mauve12: string;
        yellow1: string;
        yellow2: string;
        yellow3: string;
        yellow4: string;
        yellow5: string;
        yellow6: string;
        yellow7: string;
        yellow8: string;
        yellow9: string;
        yellow10: string;
        yellow11: string;
        yellow12: string;
        purple1: string;
        purple2: string;
        purple3: string;
        purple4: string;
        purple5: string;
        purple6: string;
        purple7: string;
        purple8: string;
        purple9: string;
        purple10: string;
        purple11: string;
        purple12: string;
    };
    fonts: {
        poppins: string;
    };
    space: {
        none: string;
        small1: string;
        small2: string;
        small3: string;
        medium1: string;
        medium2: string;
        medium3: string;
        large1: string;
        large2: string;
        large3: string;
    };
    sizes: {
        none: string;
        small1: string;
        small2: string;
        small3: string;
        medium1: string;
        medium2: string;
        medium3: string;
        large1: string;
        large2: string;
        large3: string;
    };
    fontSizes: {
        xsmall: string;
        small: string;
        medium: string;
        large: string;
    };
    fontWeights: {
        regular: string;
        semiBold: string;
        bold: string;
    };
    radii: {
        none: string;
        small: string;
        medium: string;
        large: string;
        circle: string;
    };
    shadows: {
        card: string;
    };
    zIndices: {
        1: string;
        2: string;
        3: string;
        4: string;
        max: string;
    };
    transitions: unknown;
    lineHeights: unknown;
    letterSpacings: unknown;
    borderWidths: unknown;
    borderStyles: unknown;
}, import("@stitches/react/types/config").DefaultThemeMap, {
    m: (value: string | number) => {
        margin: string | number;
    };
    mt: (value: string | number) => {
        margintTop: string | number;
    };
    mb: (value: string | number) => {
        margintBottom: string | number;
    };
    ml: (value: string | number) => {
        margintLeft: string | number;
    };
    mr: (value: string | number) => {
        marginRight: string | number;
    };
    mx: (value: string | number) => {
        marginLeft: string | number;
        marginRight: string | number;
    };
    my: (value: string | number) => {
        marginTop: string | number;
        marginBottom: string | number;
    };
    br: (value: string | number) => {
        borderRadius: string | number;
    };
    size: (value: string | number) => {
        width: string | number;
        height: string | number;
    };
    linearGradient: (value: string) => {
        backgroundImage: string;
    };
}>>, css: <Composers extends (string | import("@stitches/react/types/util").Function | import("react").ExoticComponent<any> | import("react").JSXElementConstructor<any> | {
    [name: string]: unknown;
})[], CSS_1 = import("@stitches/react/types/css-util").CSS<{
    sm: "(min-width: 640px)";
    md: "(min-width: 768px)";
    lg: "(min-width: 1024px)";
}, {
    colors: {
        accent1: string;
        accent2: string;
        accent3: string;
        accent4: string;
        accent5: string;
        accent6: string;
        accent7: string;
        accent8: string;
        accent9: string;
        accent10: string;
        accent11: string;
        accent12: string;
        white: string;
        red1: string;
        red2: string;
        red3: string;
        red4: string;
        red5: string;
        red6: string;
        red7: string;
        red8: string;
        red9: string;
        red10: string;
        red11: string;
        red12: string;
        blackA1: string;
        blackA2: string;
        blackA3: string;
        blackA4: string;
        blackA5: string;
        blackA6: string;
        blackA7: string;
        blackA8: string;
        blackA9: string;
        blackA10: string;
        blackA11: string;
        blackA12: string;
        green1: string;
        green2: string;
        green3: string;
        green4: string;
        green5: string;
        green6: string;
        green7: string;
        green8: string;
        green9: string;
        green10: string;
        green11: string;
        green12: string;
        pink1: string;
        pink2: string;
        pink3: string;
        pink4: string;
        pink5: string;
        pink6: string;
        pink7: string;
        pink8: string;
        pink9: string;
        pink10: string;
        pink11: string;
        pink12: string;
        blue1: string;
        blue2: string;
        blue3: string;
        blue4: string;
        blue5: string;
        blue6: string;
        blue7: string;
        blue8: string;
        blue9: string;
        blue10: string;
        blue11: string;
        blue12: string;
        mauve1: string;
        mauve2: string;
        mauve3: string;
        mauve4: string;
        mauve5: string;
        mauve6: string;
        mauve7: string;
        mauve8: string;
        mauve9: string;
        mauve10: string;
        mauve11: string;
        mauve12: string;
        yellow1: string;
        yellow2: string;
        yellow3: string;
        yellow4: string;
        yellow5: string;
        yellow6: string;
        yellow7: string;
        yellow8: string;
        yellow9: string;
        yellow10: string;
        yellow11: string;
        yellow12: string;
        purple1: string;
        purple2: string;
        purple3: string;
        purple4: string;
        purple5: string;
        purple6: string;
        purple7: string;
        purple8: string;
        purple9: string;
        purple10: string;
        purple11: string;
        purple12: string;
    };
    fonts: {
        poppins: string;
    };
    space: {
        none: string;
        small1: string;
        small2: string;
        small3: string;
        medium1: string;
        medium2: string;
        medium3: string;
        large1: string;
        large2: string;
        large3: string;
    };
    sizes: {
        none: string;
        small1: string;
        small2: string;
        small3: string;
        medium1: string;
        medium2: string;
        medium3: string;
        large1: string;
        large2: string;
        large3: string;
    };
    fontSizes: {
        xsmall: string;
        small: string;
        medium: string;
        large: string;
    };
    fontWeights: {
        regular: string;
        semiBold: string;
        bold: string;
    };
    radii: {
        none: string;
        small: string;
        medium: string;
        large: string;
        circle: string;
    };
    shadows: {
        card: string;
    };
    zIndices: {
        1: string;
        2: string;
        3: string;
        4: string;
        max: string;
    };
    transitions: unknown;
    lineHeights: unknown;
    letterSpacings: unknown;
    borderWidths: unknown;
    borderStyles: unknown;
}, import("@stitches/react/types/config").DefaultThemeMap, {
    m: (value: string | number) => {
        margin: string | number;
    };
    mt: (value: string | number) => {
        margintTop: string | number;
    };
    mb: (value: string | number) => {
        margintBottom: string | number;
    };
    ml: (value: string | number) => {
        margintLeft: string | number;
    };
    mr: (value: string | number) => {
        marginRight: string | number;
    };
    mx: (value: string | number) => {
        marginLeft: string | number;
        marginRight: string | number;
    };
    my: (value: string | number) => {
        marginTop: string | number;
        marginBottom: string | number;
    };
    br: (value: string | number) => {
        borderRadius: string | number;
    };
    size: (value: string | number) => {
        width: string | number;
        height: string | number;
    };
    linearGradient: (value: string) => {
        backgroundImage: string;
    };
}>>(...composers: { [K in keyof Composers]: Composers[K] extends string | import("@stitches/react/types/util").Function | import("react").ExoticComponent<any> | import("react").JSXElementConstructor<any> ? Composers[K] : import("@stitches/react/types/stitches").RemoveIndex<CSS_1> & {
    variants?: {
        [x: string]: {
            [x: string]: CSS_1;
            [x: number]: CSS_1;
        };
    } | undefined;
    compoundVariants?: (("variants" extends keyof Composers[K] ? { [Name in keyof Composers[K][keyof Composers[K] & "variants"]]?: import("@stitches/react/types/util").String | import("@stitches/react/types/util").Widen<keyof Composers[K][keyof Composers[K] & "variants"][Name]> | undefined; } : import("@stitches/react/types/util").WideObject) & {
        css: CSS_1;
    })[] | undefined;
    defaultVariants?: ("variants" extends keyof Composers[K] ? { [Name_1 in keyof Composers[K][keyof Composers[K] & "variants"]]?: import("@stitches/react/types/util").String | import("@stitches/react/types/util").Widen<keyof Composers[K][keyof Composers[K] & "variants"][Name_1]> | undefined; } : import("@stitches/react/types/util").WideObject) | undefined;
} & CSS_1 & { [K2 in keyof Composers[K]]: K2 extends "compoundVariants" | "defaultVariants" | "variants" ? unknown : K2 extends keyof CSS_1 ? CSS_1[K2] : unknown; }; }) => import("@stitches/react/types/styled-component").CssComponent<import("@stitches/react/types/styled-component").StyledComponentType<Composers>, import("@stitches/react/types/styled-component").StyledComponentProps<Composers>, {
    sm: "(min-width: 640px)";
    md: "(min-width: 768px)";
    lg: "(min-width: 1024px)";
}, CSS_1>, globalCss: <Styles extends {
    [K: string]: any;
}>(...styles: ({
    '@import'?: unknown;
    '@font-face'?: unknown;
} & { [K in keyof Styles]: K extends "@import" ? string | string[] : K extends "@font-face" ? import("@stitches/react/types/css").AtRule.FontFace | import("@stitches/react/types/css").AtRule.FontFace[] : K extends `@keyframes ${string}` ? {
    [x: string]: import("@stitches/react/types/css-util").CSS<{
        sm: "(min-width: 640px)";
        md: "(min-width: 768px)";
        lg: "(min-width: 1024px)";
    }, {
        colors: {
            accent1: string;
            accent2: string;
            accent3: string;
            accent4: string;
            accent5: string;
            accent6: string;
            accent7: string;
            accent8: string;
            accent9: string;
            accent10: string;
            accent11: string;
            accent12: string;
            white: string;
            red1: string;
            red2: string;
            red3: string;
            red4: string;
            red5: string;
            red6: string;
            red7: string;
            red8: string;
            red9: string;
            red10: string;
            red11: string;
            red12: string;
            blackA1: string;
            blackA2: string;
            blackA3: string;
            blackA4: string;
            blackA5: string;
            blackA6: string;
            blackA7: string;
            blackA8: string;
            blackA9: string;
            blackA10: string;
            blackA11: string;
            blackA12: string;
            green1: string;
            green2: string;
            green3: string;
            green4: string;
            green5: string;
            green6: string;
            green7: string;
            green8: string;
            green9: string;
            green10: string;
            green11: string;
            green12: string;
            pink1: string;
            pink2: string;
            pink3: string;
            pink4: string;
            pink5: string;
            pink6: string;
            pink7: string;
            pink8: string;
            pink9: string;
            pink10: string;
            pink11: string;
            pink12: string;
            blue1: string;
            blue2: string;
            blue3: string;
            blue4: string;
            blue5: string;
            blue6: string;
            blue7: string;
            blue8: string;
            blue9: string;
            blue10: string;
            blue11: string;
            blue12: string;
            mauve1: string;
            mauve2: string;
            mauve3: string;
            mauve4: string;
            mauve5: string;
            mauve6: string;
            mauve7: string;
            mauve8: string;
            mauve9: string;
            mauve10: string;
            mauve11: string;
            mauve12: string;
            yellow1: string;
            yellow2: string;
            yellow3: string;
            yellow4: string;
            yellow5: string;
            yellow6: string;
            yellow7: string;
            yellow8: string;
            yellow9: string;
            yellow10: string;
            yellow11: string;
            yellow12: string;
            purple1: string;
            purple2: string;
            purple3: string;
            purple4: string;
            purple5: string;
            purple6: string;
            purple7: string;
            purple8: string;
            purple9: string;
            purple10: string;
            purple11: string;
            purple12: string;
        };
        fonts: {
            poppins: string;
        };
        space: {
            none: string;
            small1: string;
            small2: string;
            small3: string;
            medium1: string;
            medium2: string;
            medium3: string;
            large1: string;
            large2: string;
            large3: string;
        };
        sizes: {
            none: string;
            small1: string;
            small2: string;
            small3: string;
            medium1: string;
            medium2: string;
            medium3: string;
            large1: string;
            large2: string;
            large3: string;
        };
        fontSizes: {
            xsmall: string;
            small: string;
            medium: string;
            large: string;
        };
        fontWeights: {
            regular: string;
            semiBold: string;
            bold: string;
        };
        radii: {
            none: string;
            small: string;
            medium: string;
            large: string;
            circle: string;
        };
        shadows: {
            card: string;
        };
        zIndices: {
            1: string;
            2: string;
            3: string;
            4: string;
            max: string;
        };
        transitions: unknown;
        lineHeights: unknown;
        letterSpacings: unknown;
        borderWidths: unknown;
        borderStyles: unknown;
    }, import("@stitches/react/types/config").DefaultThemeMap, {
        m: (value: string | number) => {
            margin: string | number;
        };
        mt: (value: string | number) => {
            margintTop: string | number;
        };
        mb: (value: string | number) => {
            margintBottom: string | number;
        };
        ml: (value: string | number) => {
            margintLeft: string | number;
        };
        mr: (value: string | number) => {
            marginRight: string | number;
        };
        mx: (value: string | number) => {
            marginLeft: string | number;
            marginRight: string | number;
        };
        my: (value: string | number) => {
            marginTop: string | number;
            marginBottom: string | number;
        };
        br: (value: string | number) => {
            borderRadius: string | number;
        };
        size: (value: string | number) => {
            width: string | number;
            height: string | number;
        };
        linearGradient: (value: string) => {
            backgroundImage: string;
        };
    }>;
} : K extends `@property ${string}` ? import("@stitches/react/types/css").AtRule.Property : import("@stitches/react/types/css-util").CSS<{
    sm: "(min-width: 640px)";
    md: "(min-width: 768px)";
    lg: "(min-width: 1024px)";
}, {
    colors: {
        accent1: string;
        accent2: string;
        accent3: string;
        accent4: string;
        accent5: string;
        accent6: string;
        accent7: string;
        accent8: string;
        accent9: string;
        accent10: string;
        accent11: string;
        accent12: string;
        white: string;
        red1: string;
        red2: string;
        red3: string;
        red4: string;
        red5: string;
        red6: string;
        red7: string;
        red8: string;
        red9: string;
        red10: string;
        red11: string;
        red12: string;
        blackA1: string;
        blackA2: string;
        blackA3: string;
        blackA4: string;
        blackA5: string;
        blackA6: string;
        blackA7: string;
        blackA8: string;
        blackA9: string;
        blackA10: string;
        blackA11: string;
        blackA12: string;
        green1: string;
        green2: string;
        green3: string;
        green4: string;
        green5: string;
        green6: string;
        green7: string;
        green8: string;
        green9: string;
        green10: string;
        green11: string;
        green12: string;
        pink1: string;
        pink2: string;
        pink3: string;
        pink4: string;
        pink5: string;
        pink6: string;
        pink7: string;
        pink8: string;
        pink9: string;
        pink10: string;
        pink11: string;
        pink12: string;
        blue1: string;
        blue2: string;
        blue3: string;
        blue4: string;
        blue5: string;
        blue6: string;
        blue7: string;
        blue8: string;
        blue9: string;
        blue10: string;
        blue11: string;
        blue12: string;
        mauve1: string;
        mauve2: string;
        mauve3: string;
        mauve4: string;
        mauve5: string;
        mauve6: string;
        mauve7: string;
        mauve8: string;
        mauve9: string;
        mauve10: string;
        mauve11: string;
        mauve12: string;
        yellow1: string;
        yellow2: string;
        yellow3: string;
        yellow4: string;
        yellow5: string;
        yellow6: string;
        yellow7: string;
        yellow8: string;
        yellow9: string;
        yellow10: string;
        yellow11: string;
        yellow12: string;
        purple1: string;
        purple2: string;
        purple3: string;
        purple4: string;
        purple5: string;
        purple6: string;
        purple7: string;
        purple8: string;
        purple9: string;
        purple10: string;
        purple11: string;
        purple12: string;
    };
    fonts: {
        poppins: string;
    };
    space: {
        none: string;
        small1: string;
        small2: string;
        small3: string;
        medium1: string;
        medium2: string;
        medium3: string;
        large1: string;
        large2: string;
        large3: string;
    };
    sizes: {
        none: string;
        small1: string;
        small2: string;
        small3: string;
        medium1: string;
        medium2: string;
        medium3: string;
        large1: string;
        large2: string;
        large3: string;
    };
    fontSizes: {
        xsmall: string;
        small: string;
        medium: string;
        large: string;
    };
    fontWeights: {
        regular: string;
        semiBold: string;
        bold: string;
    };
    radii: {
        none: string;
        small: string;
        medium: string;
        large: string;
        circle: string;
    };
    shadows: {
        card: string;
    };
    zIndices: {
        1: string;
        2: string;
        3: string;
        4: string;
        max: string;
    };
    transitions: unknown;
    lineHeights: unknown;
    letterSpacings: unknown;
    borderWidths: unknown;
    borderStyles: unknown;
}, import("@stitches/react/types/config").DefaultThemeMap, {
    m: (value: string | number) => {
        margin: string | number;
    };
    mt: (value: string | number) => {
        margintTop: string | number;
    };
    mb: (value: string | number) => {
        margintBottom: string | number;
    };
    ml: (value: string | number) => {
        margintLeft: string | number;
    };
    mr: (value: string | number) => {
        marginRight: string | number;
    };
    mx: (value: string | number) => {
        marginLeft: string | number;
        marginRight: string | number;
    };
    my: (value: string | number) => {
        marginTop: string | number;
        marginBottom: string | number;
    };
    br: (value: string | number) => {
        borderRadius: string | number;
    };
    size: (value: string | number) => {
        width: string | number;
        height: string | number;
    };
    linearGradient: (value: string) => {
        backgroundImage: string;
    };
}>; })[]) => () => string, keyframes: (style: {
    [offset: string]: import("@stitches/react/types/css-util").CSS<{
        sm: "(min-width: 640px)";
        md: "(min-width: 768px)";
        lg: "(min-width: 1024px)";
    }, {
        colors: {
            accent1: string;
            accent2: string;
            accent3: string;
            accent4: string;
            accent5: string;
            accent6: string;
            accent7: string;
            accent8: string;
            accent9: string;
            accent10: string;
            accent11: string;
            accent12: string;
            white: string;
            red1: string;
            red2: string;
            red3: string;
            red4: string;
            red5: string;
            red6: string;
            red7: string;
            red8: string;
            red9: string;
            red10: string;
            red11: string;
            red12: string;
            blackA1: string;
            blackA2: string;
            blackA3: string;
            blackA4: string;
            blackA5: string;
            blackA6: string;
            blackA7: string;
            blackA8: string;
            blackA9: string;
            blackA10: string;
            blackA11: string;
            blackA12: string;
            green1: string;
            green2: string;
            green3: string;
            green4: string;
            green5: string;
            green6: string;
            green7: string;
            green8: string;
            green9: string;
            green10: string;
            green11: string;
            green12: string;
            pink1: string;
            pink2: string;
            pink3: string;
            pink4: string;
            pink5: string;
            pink6: string;
            pink7: string;
            pink8: string;
            pink9: string;
            pink10: string;
            pink11: string;
            pink12: string;
            blue1: string;
            blue2: string;
            blue3: string;
            blue4: string;
            blue5: string;
            blue6: string;
            blue7: string;
            blue8: string;
            blue9: string;
            blue10: string;
            blue11: string;
            blue12: string;
            mauve1: string;
            mauve2: string;
            mauve3: string;
            mauve4: string;
            mauve5: string;
            mauve6: string;
            mauve7: string;
            mauve8: string;
            mauve9: string;
            mauve10: string;
            mauve11: string;
            mauve12: string;
            yellow1: string;
            yellow2: string;
            yellow3: string;
            yellow4: string;
            yellow5: string;
            yellow6: string;
            yellow7: string;
            yellow8: string;
            yellow9: string;
            yellow10: string;
            yellow11: string;
            yellow12: string;
            purple1: string;
            purple2: string;
            purple3: string;
            purple4: string;
            purple5: string;
            purple6: string;
            purple7: string;
            purple8: string;
            purple9: string;
            purple10: string;
            purple11: string;
            purple12: string;
        };
        fonts: {
            poppins: string;
        };
        space: {
            none: string;
            small1: string;
            small2: string;
            small3: string;
            medium1: string;
            medium2: string;
            medium3: string;
            large1: string;
            large2: string;
            large3: string;
        };
        sizes: {
            none: string;
            small1: string;
            small2: string;
            small3: string;
            medium1: string;
            medium2: string;
            medium3: string;
            large1: string;
            large2: string;
            large3: string;
        };
        fontSizes: {
            xsmall: string;
            small: string;
            medium: string;
            large: string;
        };
        fontWeights: {
            regular: string;
            semiBold: string;
            bold: string;
        };
        radii: {
            none: string;
            small: string;
            medium: string;
            large: string;
            circle: string;
        };
        shadows: {
            card: string;
        };
        zIndices: {
            1: string;
            2: string;
            3: string;
            4: string;
            max: string;
        };
        transitions: unknown;
        lineHeights: unknown;
        letterSpacings: unknown;
        borderWidths: unknown;
        borderStyles: unknown;
    }, import("@stitches/react/types/config").DefaultThemeMap, {
        m: (value: string | number) => {
            margin: string | number;
        };
        mt: (value: string | number) => {
            margintTop: string | number;
        };
        mb: (value: string | number) => {
            margintBottom: string | number;
        };
        ml: (value: string | number) => {
            margintLeft: string | number;
        };
        mr: (value: string | number) => {
            marginRight: string | number;
        };
        mx: (value: string | number) => {
            marginLeft: string | number;
            marginRight: string | number;
        };
        my: (value: string | number) => {
            marginTop: string | number;
            marginBottom: string | number;
        };
        br: (value: string | number) => {
            borderRadius: string | number;
        };
        size: (value: string | number) => {
            width: string | number;
            height: string | number;
        };
        linearGradient: (value: string) => {
            backgroundImage: string;
        };
    }>;
}) => {
    (): string;
    name: string;
}, getCssText: () => string, theme: string & {
    className: string;
    selector: string;
} & {
    colors: {
        accent1: import("@stitches/react/types/theme").Token<"accent1", string, "colors", "">;
        accent2: import("@stitches/react/types/theme").Token<"accent2", string, "colors", "">;
        accent3: import("@stitches/react/types/theme").Token<"accent3", string, "colors", "">;
        accent4: import("@stitches/react/types/theme").Token<"accent4", string, "colors", "">;
        accent5: import("@stitches/react/types/theme").Token<"accent5", string, "colors", "">;
        accent6: import("@stitches/react/types/theme").Token<"accent6", string, "colors", "">;
        accent7: import("@stitches/react/types/theme").Token<"accent7", string, "colors", "">;
        accent8: import("@stitches/react/types/theme").Token<"accent8", string, "colors", "">;
        accent9: import("@stitches/react/types/theme").Token<"accent9", string, "colors", "">;
        accent10: import("@stitches/react/types/theme").Token<"accent10", string, "colors", "">;
        accent11: import("@stitches/react/types/theme").Token<"accent11", string, "colors", "">;
        accent12: import("@stitches/react/types/theme").Token<"accent12", string, "colors", "">;
        white: import("@stitches/react/types/theme").Token<"white", string, "colors", "">;
        red1: import("@stitches/react/types/theme").Token<"red1", string, "colors", "">;
        red2: import("@stitches/react/types/theme").Token<"red2", string, "colors", "">;
        red3: import("@stitches/react/types/theme").Token<"red3", string, "colors", "">;
        red4: import("@stitches/react/types/theme").Token<"red4", string, "colors", "">;
        red5: import("@stitches/react/types/theme").Token<"red5", string, "colors", "">;
        red6: import("@stitches/react/types/theme").Token<"red6", string, "colors", "">;
        red7: import("@stitches/react/types/theme").Token<"red7", string, "colors", "">;
        red8: import("@stitches/react/types/theme").Token<"red8", string, "colors", "">;
        red9: import("@stitches/react/types/theme").Token<"red9", string, "colors", "">;
        red10: import("@stitches/react/types/theme").Token<"red10", string, "colors", "">;
        red11: import("@stitches/react/types/theme").Token<"red11", string, "colors", "">;
        red12: import("@stitches/react/types/theme").Token<"red12", string, "colors", "">;
        blackA1: import("@stitches/react/types/theme").Token<"blackA1", string, "colors", "">;
        blackA2: import("@stitches/react/types/theme").Token<"blackA2", string, "colors", "">;
        blackA3: import("@stitches/react/types/theme").Token<"blackA3", string, "colors", "">;
        blackA4: import("@stitches/react/types/theme").Token<"blackA4", string, "colors", "">;
        blackA5: import("@stitches/react/types/theme").Token<"blackA5", string, "colors", "">;
        blackA6: import("@stitches/react/types/theme").Token<"blackA6", string, "colors", "">;
        blackA7: import("@stitches/react/types/theme").Token<"blackA7", string, "colors", "">;
        blackA8: import("@stitches/react/types/theme").Token<"blackA8", string, "colors", "">;
        blackA9: import("@stitches/react/types/theme").Token<"blackA9", string, "colors", "">;
        blackA10: import("@stitches/react/types/theme").Token<"blackA10", string, "colors", "">;
        blackA11: import("@stitches/react/types/theme").Token<"blackA11", string, "colors", "">;
        blackA12: import("@stitches/react/types/theme").Token<"blackA12", string, "colors", "">;
        green1: import("@stitches/react/types/theme").Token<"green1", string, "colors", "">;
        green2: import("@stitches/react/types/theme").Token<"green2", string, "colors", "">;
        green3: import("@stitches/react/types/theme").Token<"green3", string, "colors", "">;
        green4: import("@stitches/react/types/theme").Token<"green4", string, "colors", "">;
        green5: import("@stitches/react/types/theme").Token<"green5", string, "colors", "">;
        green6: import("@stitches/react/types/theme").Token<"green6", string, "colors", "">;
        green7: import("@stitches/react/types/theme").Token<"green7", string, "colors", "">;
        green8: import("@stitches/react/types/theme").Token<"green8", string, "colors", "">;
        green9: import("@stitches/react/types/theme").Token<"green9", string, "colors", "">;
        green10: import("@stitches/react/types/theme").Token<"green10", string, "colors", "">;
        green11: import("@stitches/react/types/theme").Token<"green11", string, "colors", "">;
        green12: import("@stitches/react/types/theme").Token<"green12", string, "colors", "">;
        pink1: import("@stitches/react/types/theme").Token<"pink1", string, "colors", "">;
        pink2: import("@stitches/react/types/theme").Token<"pink2", string, "colors", "">;
        pink3: import("@stitches/react/types/theme").Token<"pink3", string, "colors", "">;
        pink4: import("@stitches/react/types/theme").Token<"pink4", string, "colors", "">;
        pink5: import("@stitches/react/types/theme").Token<"pink5", string, "colors", "">;
        pink6: import("@stitches/react/types/theme").Token<"pink6", string, "colors", "">;
        pink7: import("@stitches/react/types/theme").Token<"pink7", string, "colors", "">;
        pink8: import("@stitches/react/types/theme").Token<"pink8", string, "colors", "">;
        pink9: import("@stitches/react/types/theme").Token<"pink9", string, "colors", "">;
        pink10: import("@stitches/react/types/theme").Token<"pink10", string, "colors", "">;
        pink11: import("@stitches/react/types/theme").Token<"pink11", string, "colors", "">;
        pink12: import("@stitches/react/types/theme").Token<"pink12", string, "colors", "">;
        blue1: import("@stitches/react/types/theme").Token<"blue1", string, "colors", "">;
        blue2: import("@stitches/react/types/theme").Token<"blue2", string, "colors", "">;
        blue3: import("@stitches/react/types/theme").Token<"blue3", string, "colors", "">;
        blue4: import("@stitches/react/types/theme").Token<"blue4", string, "colors", "">;
        blue5: import("@stitches/react/types/theme").Token<"blue5", string, "colors", "">;
        blue6: import("@stitches/react/types/theme").Token<"blue6", string, "colors", "">;
        blue7: import("@stitches/react/types/theme").Token<"blue7", string, "colors", "">;
        blue8: import("@stitches/react/types/theme").Token<"blue8", string, "colors", "">;
        blue9: import("@stitches/react/types/theme").Token<"blue9", string, "colors", "">;
        blue10: import("@stitches/react/types/theme").Token<"blue10", string, "colors", "">;
        blue11: import("@stitches/react/types/theme").Token<"blue11", string, "colors", "">;
        blue12: import("@stitches/react/types/theme").Token<"blue12", string, "colors", "">;
        mauve1: import("@stitches/react/types/theme").Token<"mauve1", string, "colors", "">;
        mauve2: import("@stitches/react/types/theme").Token<"mauve2", string, "colors", "">;
        mauve3: import("@stitches/react/types/theme").Token<"mauve3", string, "colors", "">;
        mauve4: import("@stitches/react/types/theme").Token<"mauve4", string, "colors", "">;
        mauve5: import("@stitches/react/types/theme").Token<"mauve5", string, "colors", "">;
        mauve6: import("@stitches/react/types/theme").Token<"mauve6", string, "colors", "">;
        mauve7: import("@stitches/react/types/theme").Token<"mauve7", string, "colors", "">;
        mauve8: import("@stitches/react/types/theme").Token<"mauve8", string, "colors", "">;
        mauve9: import("@stitches/react/types/theme").Token<"mauve9", string, "colors", "">;
        mauve10: import("@stitches/react/types/theme").Token<"mauve10", string, "colors", "">;
        mauve11: import("@stitches/react/types/theme").Token<"mauve11", string, "colors", "">;
        mauve12: import("@stitches/react/types/theme").Token<"mauve12", string, "colors", "">;
        yellow1: import("@stitches/react/types/theme").Token<"yellow1", string, "colors", "">;
        yellow2: import("@stitches/react/types/theme").Token<"yellow2", string, "colors", "">;
        yellow3: import("@stitches/react/types/theme").Token<"yellow3", string, "colors", "">;
        yellow4: import("@stitches/react/types/theme").Token<"yellow4", string, "colors", "">;
        yellow5: import("@stitches/react/types/theme").Token<"yellow5", string, "colors", "">;
        yellow6: import("@stitches/react/types/theme").Token<"yellow6", string, "colors", "">;
        yellow7: import("@stitches/react/types/theme").Token<"yellow7", string, "colors", "">;
        yellow8: import("@stitches/react/types/theme").Token<"yellow8", string, "colors", "">;
        yellow9: import("@stitches/react/types/theme").Token<"yellow9", string, "colors", "">;
        yellow10: import("@stitches/react/types/theme").Token<"yellow10", string, "colors", "">;
        yellow11: import("@stitches/react/types/theme").Token<"yellow11", string, "colors", "">;
        yellow12: import("@stitches/react/types/theme").Token<"yellow12", string, "colors", "">;
        purple1: import("@stitches/react/types/theme").Token<"purple1", string, "colors", "">;
        purple2: import("@stitches/react/types/theme").Token<"purple2", string, "colors", "">;
        purple3: import("@stitches/react/types/theme").Token<"purple3", string, "colors", "">;
        purple4: import("@stitches/react/types/theme").Token<"purple4", string, "colors", "">;
        purple5: import("@stitches/react/types/theme").Token<"purple5", string, "colors", "">;
        purple6: import("@stitches/react/types/theme").Token<"purple6", string, "colors", "">;
        purple7: import("@stitches/react/types/theme").Token<"purple7", string, "colors", "">;
        purple8: import("@stitches/react/types/theme").Token<"purple8", string, "colors", "">;
        purple9: import("@stitches/react/types/theme").Token<"purple9", string, "colors", "">;
        purple10: import("@stitches/react/types/theme").Token<"purple10", string, "colors", "">;
        purple11: import("@stitches/react/types/theme").Token<"purple11", string, "colors", "">;
        purple12: import("@stitches/react/types/theme").Token<"purple12", string, "colors", "">;
    };
    fonts: {
        poppins: import("@stitches/react/types/theme").Token<"poppins", string, "fonts", "">;
    };
    space: {
        none: import("@stitches/react/types/theme").Token<"none", string, "space", "">;
        small1: import("@stitches/react/types/theme").Token<"small1", string, "space", "">;
        small2: import("@stitches/react/types/theme").Token<"small2", string, "space", "">;
        small3: import("@stitches/react/types/theme").Token<"small3", string, "space", "">;
        medium1: import("@stitches/react/types/theme").Token<"medium1", string, "space", "">;
        medium2: import("@stitches/react/types/theme").Token<"medium2", string, "space", "">;
        medium3: import("@stitches/react/types/theme").Token<"medium3", string, "space", "">;
        large1: import("@stitches/react/types/theme").Token<"large1", string, "space", "">;
        large2: import("@stitches/react/types/theme").Token<"large2", string, "space", "">;
        large3: import("@stitches/react/types/theme").Token<"large3", string, "space", "">;
    };
    sizes: {
        none: import("@stitches/react/types/theme").Token<"none", string, "sizes", "">;
        small1: import("@stitches/react/types/theme").Token<"small1", string, "sizes", "">;
        small2: import("@stitches/react/types/theme").Token<"small2", string, "sizes", "">;
        small3: import("@stitches/react/types/theme").Token<"small3", string, "sizes", "">;
        medium1: import("@stitches/react/types/theme").Token<"medium1", string, "sizes", "">;
        medium2: import("@stitches/react/types/theme").Token<"medium2", string, "sizes", "">;
        medium3: import("@stitches/react/types/theme").Token<"medium3", string, "sizes", "">;
        large1: import("@stitches/react/types/theme").Token<"large1", string, "sizes", "">;
        large2: import("@stitches/react/types/theme").Token<"large2", string, "sizes", "">;
        large3: import("@stitches/react/types/theme").Token<"large3", string, "sizes", "">;
    };
    fontSizes: {
        xsmall: import("@stitches/react/types/theme").Token<"xsmall", string, "fontSizes", "">;
        small: import("@stitches/react/types/theme").Token<"small", string, "fontSizes", "">;
        medium: import("@stitches/react/types/theme").Token<"medium", string, "fontSizes", "">;
        large: import("@stitches/react/types/theme").Token<"large", string, "fontSizes", "">;
    };
    fontWeights: {
        regular: import("@stitches/react/types/theme").Token<"regular", string, "fontWeights", "">;
        semiBold: import("@stitches/react/types/theme").Token<"semiBold", string, "fontWeights", "">;
        bold: import("@stitches/react/types/theme").Token<"bold", string, "fontWeights", "">;
    };
    radii: {
        none: import("@stitches/react/types/theme").Token<"none", string, "radii", "">;
        small: import("@stitches/react/types/theme").Token<"small", string, "radii", "">;
        medium: import("@stitches/react/types/theme").Token<"medium", string, "radii", "">;
        large: import("@stitches/react/types/theme").Token<"large", string, "radii", "">;
        circle: import("@stitches/react/types/theme").Token<"circle", string, "radii", "">;
    };
    shadows: {
        card: import("@stitches/react/types/theme").Token<"card", string, "shadows", "">;
    };
    zIndices: {
        1: import("@stitches/react/types/theme").Token<"1", string, "zIndices", "">;
        2: import("@stitches/react/types/theme").Token<"2", string, "zIndices", "">;
        3: import("@stitches/react/types/theme").Token<"3", string, "zIndices", "">;
        4: import("@stitches/react/types/theme").Token<"4", string, "zIndices", "">;
        max: import("@stitches/react/types/theme").Token<"max", string, "zIndices", "">;
    };
    transitions: {};
    lineHeights: {};
    letterSpacings: {};
    borderWidths: {};
    borderStyles: {};
}, createTheme: <Argument0 extends string | ({
    colors?: {
        accent1?: string | number | boolean | undefined;
        accent2?: string | number | boolean | undefined;
        accent3?: string | number | boolean | undefined;
        accent4?: string | number | boolean | undefined;
        accent5?: string | number | boolean | undefined;
        accent6?: string | number | boolean | undefined;
        accent7?: string | number | boolean | undefined;
        accent8?: string | number | boolean | undefined;
        accent9?: string | number | boolean | undefined;
        accent10?: string | number | boolean | undefined;
        accent11?: string | number | boolean | undefined;
        accent12?: string | number | boolean | undefined;
        white?: string | number | boolean | undefined;
        red1?: string | number | boolean | undefined;
        red2?: string | number | boolean | undefined;
        red3?: string | number | boolean | undefined;
        red4?: string | number | boolean | undefined;
        red5?: string | number | boolean | undefined;
        red6?: string | number | boolean | undefined;
        red7?: string | number | boolean | undefined;
        red8?: string | number | boolean | undefined;
        red9?: string | number | boolean | undefined;
        red10?: string | number | boolean | undefined;
        red11?: string | number | boolean | undefined;
        red12?: string | number | boolean | undefined;
        blackA1?: string | number | boolean | undefined;
        blackA2?: string | number | boolean | undefined;
        blackA3?: string | number | boolean | undefined;
        blackA4?: string | number | boolean | undefined;
        blackA5?: string | number | boolean | undefined;
        blackA6?: string | number | boolean | undefined;
        blackA7?: string | number | boolean | undefined;
        blackA8?: string | number | boolean | undefined;
        blackA9?: string | number | boolean | undefined;
        blackA10?: string | number | boolean | undefined;
        blackA11?: string | number | boolean | undefined;
        blackA12?: string | number | boolean | undefined;
        green1?: string | number | boolean | undefined;
        green2?: string | number | boolean | undefined;
        green3?: string | number | boolean | undefined;
        green4?: string | number | boolean | undefined;
        green5?: string | number | boolean | undefined;
        green6?: string | number | boolean | undefined;
        green7?: string | number | boolean | undefined;
        green8?: string | number | boolean | undefined;
        green9?: string | number | boolean | undefined;
        green10?: string | number | boolean | undefined;
        green11?: string | number | boolean | undefined;
        green12?: string | number | boolean | undefined;
        pink1?: string | number | boolean | undefined;
        pink2?: string | number | boolean | undefined;
        pink3?: string | number | boolean | undefined;
        pink4?: string | number | boolean | undefined;
        pink5?: string | number | boolean | undefined;
        pink6?: string | number | boolean | undefined;
        pink7?: string | number | boolean | undefined;
        pink8?: string | number | boolean | undefined;
        pink9?: string | number | boolean | undefined;
        pink10?: string | number | boolean | undefined;
        pink11?: string | number | boolean | undefined;
        pink12?: string | number | boolean | undefined;
        blue1?: string | number | boolean | undefined;
        blue2?: string | number | boolean | undefined;
        blue3?: string | number | boolean | undefined;
        blue4?: string | number | boolean | undefined;
        blue5?: string | number | boolean | undefined;
        blue6?: string | number | boolean | undefined;
        blue7?: string | number | boolean | undefined;
        blue8?: string | number | boolean | undefined;
        blue9?: string | number | boolean | undefined;
        blue10?: string | number | boolean | undefined;
        blue11?: string | number | boolean | undefined;
        blue12?: string | number | boolean | undefined;
        mauve1?: string | number | boolean | undefined;
        mauve2?: string | number | boolean | undefined;
        mauve3?: string | number | boolean | undefined;
        mauve4?: string | number | boolean | undefined;
        mauve5?: string | number | boolean | undefined;
        mauve6?: string | number | boolean | undefined;
        mauve7?: string | number | boolean | undefined;
        mauve8?: string | number | boolean | undefined;
        mauve9?: string | number | boolean | undefined;
        mauve10?: string | number | boolean | undefined;
        mauve11?: string | number | boolean | undefined;
        mauve12?: string | number | boolean | undefined;
        yellow1?: string | number | boolean | undefined;
        yellow2?: string | number | boolean | undefined;
        yellow3?: string | number | boolean | undefined;
        yellow4?: string | number | boolean | undefined;
        yellow5?: string | number | boolean | undefined;
        yellow6?: string | number | boolean | undefined;
        yellow7?: string | number | boolean | undefined;
        yellow8?: string | number | boolean | undefined;
        yellow9?: string | number | boolean | undefined;
        yellow10?: string | number | boolean | undefined;
        yellow11?: string | number | boolean | undefined;
        yellow12?: string | number | boolean | undefined;
        purple1?: string | number | boolean | undefined;
        purple2?: string | number | boolean | undefined;
        purple3?: string | number | boolean | undefined;
        purple4?: string | number | boolean | undefined;
        purple5?: string | number | boolean | undefined;
        purple6?: string | number | boolean | undefined;
        purple7?: string | number | boolean | undefined;
        purple8?: string | number | boolean | undefined;
        purple9?: string | number | boolean | undefined;
        purple10?: string | number | boolean | undefined;
        purple11?: string | number | boolean | undefined;
        purple12?: string | number | boolean | undefined;
    } | undefined;
    fonts?: {
        poppins?: string | number | boolean | undefined;
    } | undefined;
    space?: {
        none?: string | number | boolean | undefined;
        small1?: string | number | boolean | undefined;
        small2?: string | number | boolean | undefined;
        small3?: string | number | boolean | undefined;
        medium1?: string | number | boolean | undefined;
        medium2?: string | number | boolean | undefined;
        medium3?: string | number | boolean | undefined;
        large1?: string | number | boolean | undefined;
        large2?: string | number | boolean | undefined;
        large3?: string | number | boolean | undefined;
    } | undefined;
    sizes?: {
        none?: string | number | boolean | undefined;
        small1?: string | number | boolean | undefined;
        small2?: string | number | boolean | undefined;
        small3?: string | number | boolean | undefined;
        medium1?: string | number | boolean | undefined;
        medium2?: string | number | boolean | undefined;
        medium3?: string | number | boolean | undefined;
        large1?: string | number | boolean | undefined;
        large2?: string | number | boolean | undefined;
        large3?: string | number | boolean | undefined;
    } | undefined;
    fontSizes?: {
        xsmall?: string | number | boolean | undefined;
        small?: string | number | boolean | undefined;
        medium?: string | number | boolean | undefined;
        large?: string | number | boolean | undefined;
    } | undefined;
    fontWeights?: {
        regular?: string | number | boolean | undefined;
        semiBold?: string | number | boolean | undefined;
        bold?: string | number | boolean | undefined;
    } | undefined;
    radii?: {
        none?: string | number | boolean | undefined;
        small?: string | number | boolean | undefined;
        medium?: string | number | boolean | undefined;
        large?: string | number | boolean | undefined;
        circle?: string | number | boolean | undefined;
    } | undefined;
    shadows?: {
        card?: string | number | boolean | undefined;
    } | undefined;
    zIndices?: {
        1?: string | number | boolean | undefined;
        2?: string | number | boolean | undefined;
        3?: string | number | boolean | undefined;
        4?: string | number | boolean | undefined;
        max?: string | number | boolean | undefined;
    } | undefined;
    transitions?: {} | undefined;
    lineHeights?: {} | undefined;
    letterSpacings?: {} | undefined;
    borderWidths?: {} | undefined;
    borderStyles?: {} | undefined;
} & {
    [x: string]: {
        [x: string]: string | number | boolean;
        [x: number]: string | number | boolean;
    };
}), Argument1 extends string | ({
    colors?: {
        accent1?: string | number | boolean | undefined;
        accent2?: string | number | boolean | undefined;
        accent3?: string | number | boolean | undefined;
        accent4?: string | number | boolean | undefined;
        accent5?: string | number | boolean | undefined;
        accent6?: string | number | boolean | undefined;
        accent7?: string | number | boolean | undefined;
        accent8?: string | number | boolean | undefined;
        accent9?: string | number | boolean | undefined;
        accent10?: string | number | boolean | undefined;
        accent11?: string | number | boolean | undefined;
        accent12?: string | number | boolean | undefined;
        white?: string | number | boolean | undefined;
        red1?: string | number | boolean | undefined;
        red2?: string | number | boolean | undefined;
        red3?: string | number | boolean | undefined;
        red4?: string | number | boolean | undefined;
        red5?: string | number | boolean | undefined;
        red6?: string | number | boolean | undefined;
        red7?: string | number | boolean | undefined;
        red8?: string | number | boolean | undefined;
        red9?: string | number | boolean | undefined;
        red10?: string | number | boolean | undefined;
        red11?: string | number | boolean | undefined;
        red12?: string | number | boolean | undefined;
        blackA1?: string | number | boolean | undefined;
        blackA2?: string | number | boolean | undefined;
        blackA3?: string | number | boolean | undefined;
        blackA4?: string | number | boolean | undefined;
        blackA5?: string | number | boolean | undefined;
        blackA6?: string | number | boolean | undefined;
        blackA7?: string | number | boolean | undefined;
        blackA8?: string | number | boolean | undefined;
        blackA9?: string | number | boolean | undefined;
        blackA10?: string | number | boolean | undefined;
        blackA11?: string | number | boolean | undefined;
        blackA12?: string | number | boolean | undefined;
        green1?: string | number | boolean | undefined;
        green2?: string | number | boolean | undefined;
        green3?: string | number | boolean | undefined;
        green4?: string | number | boolean | undefined;
        green5?: string | number | boolean | undefined;
        green6?: string | number | boolean | undefined;
        green7?: string | number | boolean | undefined;
        green8?: string | number | boolean | undefined;
        green9?: string | number | boolean | undefined;
        green10?: string | number | boolean | undefined;
        green11?: string | number | boolean | undefined;
        green12?: string | number | boolean | undefined;
        pink1?: string | number | boolean | undefined;
        pink2?: string | number | boolean | undefined;
        pink3?: string | number | boolean | undefined;
        pink4?: string | number | boolean | undefined;
        pink5?: string | number | boolean | undefined;
        pink6?: string | number | boolean | undefined;
        pink7?: string | number | boolean | undefined;
        pink8?: string | number | boolean | undefined;
        pink9?: string | number | boolean | undefined;
        pink10?: string | number | boolean | undefined;
        pink11?: string | number | boolean | undefined;
        pink12?: string | number | boolean | undefined;
        blue1?: string | number | boolean | undefined;
        blue2?: string | number | boolean | undefined;
        blue3?: string | number | boolean | undefined;
        blue4?: string | number | boolean | undefined;
        blue5?: string | number | boolean | undefined;
        blue6?: string | number | boolean | undefined;
        blue7?: string | number | boolean | undefined;
        blue8?: string | number | boolean | undefined;
        blue9?: string | number | boolean | undefined;
        blue10?: string | number | boolean | undefined;
        blue11?: string | number | boolean | undefined;
        blue12?: string | number | boolean | undefined;
        mauve1?: string | number | boolean | undefined;
        mauve2?: string | number | boolean | undefined;
        mauve3?: string | number | boolean | undefined;
        mauve4?: string | number | boolean | undefined;
        mauve5?: string | number | boolean | undefined;
        mauve6?: string | number | boolean | undefined;
        mauve7?: string | number | boolean | undefined;
        mauve8?: string | number | boolean | undefined;
        mauve9?: string | number | boolean | undefined;
        mauve10?: string | number | boolean | undefined;
        mauve11?: string | number | boolean | undefined;
        mauve12?: string | number | boolean | undefined;
        yellow1?: string | number | boolean | undefined;
        yellow2?: string | number | boolean | undefined;
        yellow3?: string | number | boolean | undefined;
        yellow4?: string | number | boolean | undefined;
        yellow5?: string | number | boolean | undefined;
        yellow6?: string | number | boolean | undefined;
        yellow7?: string | number | boolean | undefined;
        yellow8?: string | number | boolean | undefined;
        yellow9?: string | number | boolean | undefined;
        yellow10?: string | number | boolean | undefined;
        yellow11?: string | number | boolean | undefined;
        yellow12?: string | number | boolean | undefined;
        purple1?: string | number | boolean | undefined;
        purple2?: string | number | boolean | undefined;
        purple3?: string | number | boolean | undefined;
        purple4?: string | number | boolean | undefined;
        purple5?: string | number | boolean | undefined;
        purple6?: string | number | boolean | undefined;
        purple7?: string | number | boolean | undefined;
        purple8?: string | number | boolean | undefined;
        purple9?: string | number | boolean | undefined;
        purple10?: string | number | boolean | undefined;
        purple11?: string | number | boolean | undefined;
        purple12?: string | number | boolean | undefined;
    } | undefined;
    fonts?: {
        poppins?: string | number | boolean | undefined;
    } | undefined;
    space?: {
        none?: string | number | boolean | undefined;
        small1?: string | number | boolean | undefined;
        small2?: string | number | boolean | undefined;
        small3?: string | number | boolean | undefined;
        medium1?: string | number | boolean | undefined;
        medium2?: string | number | boolean | undefined;
        medium3?: string | number | boolean | undefined;
        large1?: string | number | boolean | undefined;
        large2?: string | number | boolean | undefined;
        large3?: string | number | boolean | undefined;
    } | undefined;
    sizes?: {
        none?: string | number | boolean | undefined;
        small1?: string | number | boolean | undefined;
        small2?: string | number | boolean | undefined;
        small3?: string | number | boolean | undefined;
        medium1?: string | number | boolean | undefined;
        medium2?: string | number | boolean | undefined;
        medium3?: string | number | boolean | undefined;
        large1?: string | number | boolean | undefined;
        large2?: string | number | boolean | undefined;
        large3?: string | number | boolean | undefined;
    } | undefined;
    fontSizes?: {
        xsmall?: string | number | boolean | undefined;
        small?: string | number | boolean | undefined;
        medium?: string | number | boolean | undefined;
        large?: string | number | boolean | undefined;
    } | undefined;
    fontWeights?: {
        regular?: string | number | boolean | undefined;
        semiBold?: string | number | boolean | undefined;
        bold?: string | number | boolean | undefined;
    } | undefined;
    radii?: {
        none?: string | number | boolean | undefined;
        small?: string | number | boolean | undefined;
        medium?: string | number | boolean | undefined;
        large?: string | number | boolean | undefined;
        circle?: string | number | boolean | undefined;
    } | undefined;
    shadows?: {
        card?: string | number | boolean | undefined;
    } | undefined;
    zIndices?: {
        1?: string | number | boolean | undefined;
        2?: string | number | boolean | undefined;
        3?: string | number | boolean | undefined;
        4?: string | number | boolean | undefined;
        max?: string | number | boolean | undefined;
    } | undefined;
    transitions?: {} | undefined;
    lineHeights?: {} | undefined;
    letterSpacings?: {} | undefined;
    borderWidths?: {} | undefined;
    borderStyles?: {} | undefined;
} & {
    [x: string]: {
        [x: string]: string | number | boolean;
        [x: number]: string | number | boolean;
    };
})>(nameOrScalesArg0: Argument0, nameOrScalesArg1?: Argument1 | undefined) => string & {
    className: string;
    selector: string;
} & (Argument0 extends string ? import("@stitches/react/types/stitches").ThemeTokens<Argument1, ""> : import("@stitches/react/types/stitches").ThemeTokens<Argument0, "">), config: {
    prefix: "";
    media: {
        sm: "(min-width: 640px)";
        md: "(min-width: 768px)";
        lg: "(min-width: 1024px)";
    };
    theme: {
        colors: {
            accent1: string;
            accent2: string;
            accent3: string;
            accent4: string;
            accent5: string;
            accent6: string;
            accent7: string;
            accent8: string;
            accent9: string;
            accent10: string;
            accent11: string;
            accent12: string;
            white: string;
            red1: string;
            red2: string;
            red3: string;
            red4: string;
            red5: string;
            red6: string;
            red7: string;
            red8: string;
            red9: string;
            red10: string;
            red11: string;
            red12: string;
            blackA1: string;
            blackA2: string;
            blackA3: string;
            blackA4: string;
            blackA5: string;
            blackA6: string;
            blackA7: string;
            blackA8: string;
            blackA9: string;
            blackA10: string;
            blackA11: string;
            blackA12: string;
            green1: string;
            green2: string;
            green3: string;
            green4: string;
            green5: string;
            green6: string;
            green7: string;
            green8: string;
            green9: string;
            green10: string;
            green11: string;
            green12: string;
            pink1: string;
            pink2: string;
            pink3: string;
            pink4: string;
            pink5: string;
            pink6: string;
            pink7: string;
            pink8: string;
            pink9: string;
            pink10: string;
            pink11: string;
            pink12: string;
            blue1: string;
            blue2: string;
            blue3: string;
            blue4: string;
            blue5: string;
            blue6: string;
            blue7: string;
            blue8: string;
            blue9: string;
            blue10: string;
            blue11: string;
            blue12: string;
            mauve1: string;
            mauve2: string;
            mauve3: string;
            mauve4: string;
            mauve5: string;
            mauve6: string;
            mauve7: string;
            mauve8: string;
            mauve9: string;
            mauve10: string;
            mauve11: string;
            mauve12: string;
            yellow1: string;
            yellow2: string;
            yellow3: string;
            yellow4: string;
            yellow5: string;
            yellow6: string;
            yellow7: string;
            yellow8: string;
            yellow9: string;
            yellow10: string;
            yellow11: string;
            yellow12: string;
            purple1: string;
            purple2: string;
            purple3: string;
            purple4: string;
            purple5: string;
            purple6: string;
            purple7: string;
            purple8: string;
            purple9: string;
            purple10: string;
            purple11: string;
            purple12: string;
        };
        fonts: {
            poppins: string;
        };
        space: {
            none: string;
            small1: string;
            small2: string;
            small3: string;
            medium1: string;
            medium2: string;
            medium3: string;
            large1: string;
            large2: string;
            large3: string;
        };
        sizes: {
            none: string;
            small1: string;
            small2: string;
            small3: string;
            medium1: string;
            medium2: string;
            medium3: string;
            large1: string;
            large2: string;
            large3: string;
        };
        fontSizes: {
            xsmall: string;
            small: string;
            medium: string;
            large: string;
        };
        fontWeights: {
            regular: string;
            semiBold: string;
            bold: string;
        };
        radii: {
            none: string;
            small: string;
            medium: string;
            large: string;
            circle: string;
        };
        shadows: {
            card: string;
        };
        zIndices: {
            1: string;
            2: string;
            3: string;
            4: string;
            max: string;
        };
        transitions: unknown;
        lineHeights: unknown;
        letterSpacings: unknown;
        borderWidths: unknown;
        borderStyles: unknown;
    };
    themeMap: import("@stitches/react/types/config").DefaultThemeMap;
    utils: {
        m: (value: string | number) => {
            margin: string | number;
        };
        mt: (value: string | number) => {
            margintTop: string | number;
        };
        mb: (value: string | number) => {
            margintBottom: string | number;
        };
        ml: (value: string | number) => {
            margintLeft: string | number;
        };
        mr: (value: string | number) => {
            marginRight: string | number;
        };
        mx: (value: string | number) => {
            marginLeft: string | number;
            marginRight: string | number;
        };
        my: (value: string | number) => {
            marginTop: string | number;
            marginBottom: string | number;
        };
        br: (value: string | number) => {
            borderRadius: string | number;
        };
        size: (value: string | number) => {
            width: string | number;
            height: string | number;
        };
        linearGradient: (value: string) => {
            backgroundImage: string;
        };
    };
};
export declare const space: {
    none: string;
    small1: string;
    small2: string;
    small3: string;
    medium1: string;
    medium2: string;
    medium3: string;
    large1: string;
    large2: string;
    large3: string;
}, colors: {
    accent1: string;
    accent2: string;
    accent3: string;
    accent4: string;
    accent5: string;
    accent6: string;
    accent7: string;
    accent8: string;
    accent9: string;
    accent10: string;
    accent11: string;
    accent12: string;
    white: string;
    red1: string;
    red2: string;
    red3: string;
    red4: string;
    red5: string;
    red6: string;
    red7: string;
    red8: string;
    red9: string;
    red10: string;
    red11: string;
    red12: string;
    blackA1: string;
    blackA2: string;
    blackA3: string;
    blackA4: string;
    blackA5: string;
    blackA6: string;
    blackA7: string;
    blackA8: string;
    blackA9: string;
    blackA10: string;
    blackA11: string;
    blackA12: string;
    green1: string;
    green2: string;
    green3: string;
    green4: string;
    green5: string;
    green6: string;
    green7: string;
    green8: string;
    green9: string;
    green10: string;
    green11: string;
    green12: string;
    pink1: string;
    pink2: string;
    pink3: string;
    pink4: string;
    pink5: string;
    pink6: string;
    pink7: string;
    pink8: string;
    pink9: string;
    pink10: string;
    pink11: string;
    pink12: string;
    blue1: string;
    blue2: string;
    blue3: string;
    blue4: string;
    blue5: string;
    blue6: string;
    blue7: string;
    blue8: string;
    blue9: string;
    blue10: string;
    blue11: string;
    blue12: string;
    mauve1: string;
    mauve2: string;
    mauve3: string;
    mauve4: string;
    mauve5: string;
    mauve6: string;
    mauve7: string;
    mauve8: string;
    mauve9: string;
    mauve10: string;
    mauve11: string;
    mauve12: string;
    yellow1: string;
    yellow2: string;
    yellow3: string;
    yellow4: string;
    yellow5: string;
    yellow6: string;
    yellow7: string;
    yellow8: string;
    yellow9: string;
    yellow10: string;
    yellow11: string;
    yellow12: string;
    purple1: string;
    purple2: string;
    purple3: string;
    purple4: string;
    purple5: string;
    purple6: string;
    purple7: string;
    purple8: string;
    purple9: string;
    purple10: string;
    purple11: string;
    purple12: string;
}, radii: {
    none: string;
    small: string;
    medium: string;
    large: string;
    circle: string;
}, zIndices: {
    1: string;
    2: string;
    3: string;
    4: string;
    max: string;
}, fonts: {
    poppins: string;
}, fontSizes: {
    xsmall: string;
    small: string;
    medium: string;
    large: string;
}, lineHeights: unknown, letterSpacings: unknown, fontWeights: {
    regular: string;
    semiBold: string;
    bold: string;
}, sizes: {
    none: string;
    small1: string;
    small2: string;
    small3: string;
    medium1: string;
    medium2: string;
    medium3: string;
    large1: string;
    large2: string;
    large3: string;
};
export declare const media: {
    sm: "(min-width: 640px)";
    md: "(min-width: 768px)";
    lg: "(min-width: 1024px)";
};
export declare type CSS = Stitches.CSS<typeof config>;
